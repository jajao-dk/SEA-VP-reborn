{
	"info": {
		"_postman_id": "62f7c4de-6b7b-4e64-8df9-a34e18aef5e4",
		"name": "api-quicksight",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "18495470"
	},
	"item": [
		{
			"name": "NORMAL-CIM",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('EmbedUrl is filled', function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.EmbedUrl).to.match(/^https:/);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_CIM}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "SSM",
							"disabled": true
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_SSM_customer_id}}",
							"disabled": true
						},
						{
							"key": "user_name",
							"value": "{{PARAM_SSM_user_name}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-CIM-no-auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 401 Unauthorized\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "SSM",
							"disabled": true
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_SSM_customer_id}}",
							"disabled": true
						},
						{
							"key": "user_name",
							"value": "{{PARAM_SSM_user_name}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NORMAL-SSM",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('EmbedUrl is filled', function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.EmbedUrl).to.match(/^https:/);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_SSM}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=SSM&customer_id={{PARAM_SSM_customer_id}}&user_name={{PARAM_SSM_user_name}}",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "SSM"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_SSM_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_SSM_user_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-SSM-no-auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 401 Unauthorized\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=SSM&customer_id={{PARAM_SSM_customer_id}}&user_name={{PARAM_SSM_user_name}}",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "SSM"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_SSM_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_SSM_user_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-SSM-no-SSM-in-token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 403 Forbidden\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_CIM}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=SSM&customer_id={{PARAM_SSM_customer_id}}&user_name={{PARAM_SSM_user_name}}",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "SSM"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_SSM_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_SSM_user_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-SSM-no-param-application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 403 Forbidden\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_SSM}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?customer_id={{PARAM_SSM_customer_id}}&user_name={{PARAM_SSM_user_name}}",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "SSM",
							"disabled": true
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_SSM_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_SSM_user_name}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NORMAL-SSM-no-param-user_name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('EmbedUrl is filled', function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.EmbedUrl).to.match(/^https:/);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_SSM}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=SSM&customer_id={{PARAM_SSM_customer_id}}",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "SSM"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_SSM_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_SSM_user_name}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-SSM-no-param-all",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 403 Forbidden\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_SSM}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "SSM",
							"disabled": true
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_SSM_customer_id}}",
							"disabled": true
						},
						{
							"key": "user_name",
							"value": "{{PARAM_SSM_user_name}}",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NORMAL-GP-contents_id-ssm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('EmbedUrl is filled', function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.EmbedUrl).to.match(/^https:/);",
							"  pm.expect(jsonData.EmbedUrl).to.include(\"quicksight-dashboard-sea-vp-ssm-\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_GP}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&customer_id={{PARAM_GP_customer_id}}&user_name={{PARAM_GP_user_name}}&content_id=ssm",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "ssm"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NORMAL-GP-contents_id-gperrm",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('EmbedUrl is filled', function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.EmbedUrl).to.match(/^https:/);",
							"  pm.expect(jsonData.EmbedUrl).to.include(\"quicksight-dashboard-sea-vp-gperrm-\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_GP}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&customer_id={{PARAM_GP_customer_id}}&user_name={{PARAM_GP_user_name}}&content_id=gperrm",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "gperrm"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NORMAL-GP-contents_id-gpvcs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('EmbedUrl is filled', function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.EmbedUrl).to.match(/^https:/);",
							"  pm.expect(jsonData.EmbedUrl).to.include(\"quicksight-dashboard-sea-vp-gpvcs-client-v1\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_GP}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&customer_id={{PARAM_GP_customer_id}}&user_name={{PARAM_GP_user_name}}&content_id=gpvcs",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "gpvcs"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NORMAL-GP-contents_id-emd",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('EmbedUrl is filled', function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.EmbedUrl).to.match(/^https:/);",
							"  pm.expect(jsonData.EmbedUrl).to.include(\"quicksight-dashboard-sea-vp-emd-client-v1_3\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_GP}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&customer_id={{PARAM_GP_customer_id}}&user_name={{PARAM_GP_user_name}}&content_id=emd",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "emd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NORMAL-GP-contents_id-cimrd",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('EmbedUrl is filled', function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.EmbedUrl).to.match(/^https:/);",
							"  pm.expect(jsonData.EmbedUrl).to.include(\"quicksight-dashboard-sea-vp-cim-\");",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_GP}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&customer_id={{PARAM_GP_customer_id}}&user_name={{PARAM_GP_user_name}}&content_id=cimrd",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "cimrd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-GP-no-auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 401 Unauthorized\", function () {",
							"    pm.response.to.have.status(401);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&customer_id={{PARAM_GP_customer_id}}&user_name={{PARAM_GP_user_name}}&content_id=emd",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "emd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-GP-no-GP-in-token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 403 Forbidden\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_CIM}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&customer_id={{PARAM_GP_customer_id}}&user_name={{PARAM_GP_user_name}}&content_id=emd",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "emd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-GP-no-param-application",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 403 Forbidden\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_GP}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?customer_id={{PARAM_GP_customer_id}}&user_name={{PARAM_GP_user_name}}&content_id=emd",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP",
							"disabled": true
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "emd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-GP-no-param-customer_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 403 Forbidden\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_GP}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&user_name={{PARAM_GP_user_name}}&content_id=emd",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}",
							"disabled": true
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "emd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "NORMAL-GP-no-param-user_name",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', function () {",
							"  pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test('EmbedUrl is filled', function () {",
							"  var jsonData = pm.response.json();",
							"  pm.expect(jsonData.EmbedUrl).to.match(/^https:/);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_GP}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&customer_id={{PARAM_GP_customer_id}}&content_id=emd",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}",
							"disabled": true
						},
						{
							"key": "content_id",
							"value": "emd"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-GP-no-param-contents_id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 403 Forbidden\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_GP}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&customer_id={{PARAM_GP_customer_id}}&user_name={{PARAM_GP_user_name}}",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "emd",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-no-param-all",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 403 Forbidden\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_GP}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "SSM",
							"disabled": true
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}",
							"disabled": true
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}",
							"disabled": true
						},
						{
							"key": "countent_id",
							"value": "emd",
							"disabled": true
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "ERROR-no-qs",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"response status must be 403 Forbidden\", function () {",
							"    pm.response.to.have.status(403);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"auth": {
					"type": "bearer",
					"bearer": [
						{
							"key": "token",
							"value": "{{TOKEN_FOR_NO_QS}}",
							"type": "string"
						}
					]
				},
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{ENDPOINT}}?application=GP&customer_id={{PARAM_GP_customer_id}}&user_name={{PARAM_GP_user_name}}&content_id=ssm",
					"host": [
						"{{ENDPOINT}}"
					],
					"query": [
						{
							"key": "application",
							"value": "GP"
						},
						{
							"key": "customer_id",
							"value": "{{PARAM_GP_customer_id}}"
						},
						{
							"key": "user_name",
							"value": "{{PARAM_GP_user_name}}"
						},
						{
							"key": "content_id",
							"value": "ssm"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "ENDPOINT",
			"value": "https://vp.seapln-osr.pt-aws.wni.com/api/v1/quicksight",
			"type": "string"
		},
		{
			"key": "TOKEN_FOR_CIM",
			"value": "",
			"type": "string"
		},
		{
			"key": "TOKEN_FOR_SSM",
			"value": "",
			"type": "string"
		},
		{
			"key": "PARAM_SSM_user_name",
			"value": "sea-dev%2Bneom%40wni.co.jp",
			"type": "string"
		},
		{
			"key": "PARAM_SSM_customer_id",
			"value": "NEOM",
			"type": "string"
		},
		{
			"key": "PARAM_GP_customer_id",
			"value": "PPB"
		},
		{
			"key": "PARAM_GP_user_name",
			"value": "sea-dev%2Bppb%40wni.co.jp"
		}
	]
}